================================================================================
PASS: PlainIntRangeTest::TestLength (at line 26)
--------------------------------------------------------------------------------
	assert range_.length() == size_t{9}
	==> 9 == 9
================================================================================
PASS: PlainIntRangeTest::TestSum (at line 27)
--------------------------------------------------------------------------------
	assert range_.sum() == 63
	==> 63 == 63
================================================================================
PASS: PlainIntRangeTest::TestAverage (at line 28)
--------------------------------------------------------------------------------
	assert range_.average() == 7
	==> 7 == 7
================================================================================
PASS: PlainIntRangeTest::TestMin (at line 29)
--------------------------------------------------------------------------------
	assert range_.min() == 3
	==> 3 == 3
================================================================================
PASS: PlainIntRangeTest::TestMax (at line 30)
--------------------------------------------------------------------------------
	assert range_.max() == 11
	==> 11 == 11
================================================================================
PASS: PlainIntRangeTest::TestStreamExtraction (at line 35)
--------------------------------------------------------------------------------
	assert sout.str() == std::string("3, 4, 5, 6, 7, 8, 9, 10, 11")
	==> 3, 4, 5, 6, 7, 8, 9, 10, 11 == 3, 4, 5, 6, 7, 8, 9, 10, 11
================================================================================
PASS: IntRangeStepTest::TestLength (at line 54)
--------------------------------------------------------------------------------
	assert range_.length() == size_t{5}
	==> 5 == 5
================================================================================
PASS: IntRangeStepTest::TestSum (at line 55)
--------------------------------------------------------------------------------
	assert range_.sum() == 35
	==> 35 == 35
================================================================================
PASS: IntRangeStepTest::TestAverage (at line 56)
--------------------------------------------------------------------------------
	assert range_.average() == 7
	==> 7 == 7
================================================================================
PASS: IntRangeStepTest::TestMin (at line 57)
--------------------------------------------------------------------------------
	assert range_.min() == 3
	==> 3 == 3
================================================================================
PASS: IntRangeStepTest::TestMax (at line 58)
--------------------------------------------------------------------------------
	assert range_.max() == 11
	==> 11 == 11
================================================================================
PASS: IntRangeStepTest::TestStreamExtraction (at line 63)
--------------------------------------------------------------------------------
	assert sout.str() == std::string("3, 5, 7, 9, 11")
	==> 3, 5, 7, 9, 11 == 3, 5, 7, 9, 11
================================================================================
PASS: DoubleRangeStepTest::TestLength (at line 82)
--------------------------------------------------------------------------------
	assert range_.length() == size_t{6}
	==> 6 == 6
================================================================================
PASS: DoubleRangeStepTest::TestSum (at line 83)
--------------------------------------------------------------------------------
	assert range_.sum() == 82.5
	==> 82.5 == 82.5
================================================================================
PASS: DoubleRangeStepTest::TestAverage (at line 84)
--------------------------------------------------------------------------------
	assert range_.average() == 13.75
	==> 13.75 == 13.75
================================================================================
PASS: DoubleRangeStepTest::TestMin (at line 85)
--------------------------------------------------------------------------------
	assert range_.min() == 7.5
	==> 7.5 == 7.5
================================================================================
PASS: DoubleRangeStepTest::TestMax (at line 86)
--------------------------------------------------------------------------------
	assert range_.max() == 20.0
	==> 20 == 20
================================================================================
PASS: DoubleRangeStepTest::TestStreamExtraction (at line 91)
--------------------------------------------------------------------------------
	assert sout.str() == std::string("7.5, 10, 12.5, 15, 17.5, 20")
	==> 7.5, 10, 12.5, 15, 17.5, 20 == 7.5, 10, 12.5, 15, 17.5, 20
================================================================================
PASS: BackwardsIntRangeTest::TestLength (at line 110)
--------------------------------------------------------------------------------
	assert range_.length() == size_t{5}
	==> 5 == 5
================================================================================
PASS: BackwardsIntRangeTest::TestSum (at line 111)
--------------------------------------------------------------------------------
	assert range_.sum() == 40
	==> 40 == 40
================================================================================
PASS: BackwardsIntRangeTest::TestAverage (at line 112)
--------------------------------------------------------------------------------
	assert range_.average() == 8
	==> 8 == 8
================================================================================
PASS: BackwardsIntRangeTest::TestMin (at line 113)
--------------------------------------------------------------------------------
	assert range_.min() == 4
	==> 4 == 4
================================================================================
PASS: BackwardsIntRangeTest::TestMax (at line 114)
--------------------------------------------------------------------------------
	assert range_.max() == 12
	==> 12 == 12
================================================================================
PASS: BackwardsIntRangeTest::TestStreamExtraction (at line 119)
--------------------------------------------------------------------------------
	assert sout.str() == std::string("12, 10, 8, 6, 4")
	==> 12, 10, 8, 6, 4 == 12, 10, 8, 6, 4
================================================================================
PASS: BackwardsDoubleRangeTest::TestLength (at line 138)
--------------------------------------------------------------------------------
	assert range_.length() == size_t{7}
	==> 7 == 7
================================================================================
PASS: BackwardsDoubleRangeTest::TestSum (at line 139)
--------------------------------------------------------------------------------
	assert range_.sum() == 87.5
	==> 87.5 == 87.5
================================================================================
PASS: BackwardsDoubleRangeTest::TestAverage (at line 140)
--------------------------------------------------------------------------------
	assert range_.average() == 12.5
	==> 12.5 == 12.5
================================================================================
PASS: BackwardsDoubleRangeTest::TestMin (at line 141)
--------------------------------------------------------------------------------
	assert range_.min() == 5.0
	==> 5 == 5
================================================================================
PASS: BackwardsDoubleRangeTest::TestMax (at line 142)
--------------------------------------------------------------------------------
	assert range_.max() == 20.0
	==> 20 == 20
================================================================================
PASS: BackwardsDoubleRangeTest::TestStreamExtraction (at line 147)
--------------------------------------------------------------------------------
	assert sout.str() == std::string("20, 17.5, 15, 12.5, 10, 7.5, 5")
	==> 20, 17.5, 15, 12.5, 10, 7.5, 5 == 20, 17.5, 15, 12.5, 10, 7.5, 5
--------------------------------------------------------------------------------
Ran 30 tests with 0 fails.

PASSED
