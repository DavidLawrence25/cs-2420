================================================================================
PASS: EmptyLinkedListTest::TestIsEmpty (at line 24)
--------------------------------------------------------------------------------
	assert list_.empty() == true
	==> true == true
================================================================================
PASS: EmptyLinkedListTest::TestPeekFront (at line 25)
--------------------------------------------------------------------------------
	assert list_.PeekFront().has_value() == false
	==> false == false
================================================================================
PASS: EmptyLinkedListTest::TestPeekBack (at line 26)
--------------------------------------------------------------------------------
	assert list_.PeekBack().has_value() == false
	==> false == false
================================================================================
PASS: EmptyLinkedListTest::TestPeek3 (at line 27)
--------------------------------------------------------------------------------
	assert list_.Peek(3).has_value() == false
	==> false == false
================================================================================
PASS: EmptyLinkedListTest::TestPeekNegative2 (at line 28)
--------------------------------------------------------------------------------
	assert list_.Peek(-2).has_value() == false
	==> false == false
================================================================================
PASS: EmptyLinkedListTest::TestStreamExtraction (at line 33)
--------------------------------------------------------------------------------
	assert sout.str() == std::string()
	==>  == 
================================================================================
PASS: IntLinkedListTest::TestPushFront1Item (at line 75)
--------------------------------------------------------------------------------
	assert list.size() == size_t{1}
	==> 1 == 1
================================================================================
PASS: IntLinkedListTest::TestPushFront20Items (at line 81)
--------------------------------------------------------------------------------
	assert list.size() == size_t{20}
	==> 20 == 20
================================================================================
PASS: IntLinkedListTest::TestPushBack1Item (at line 87)
--------------------------------------------------------------------------------
	assert list.size() == size_t{1}
	==> 1 == 1
================================================================================
PASS: IntLinkedListTest::TestPushBack20Items (at line 93)
--------------------------------------------------------------------------------
	assert list.size() == size_t{20}
	==> 20 == 20
================================================================================
PASS: IntLinkedListTest::TestPeekFront (at line 99)
--------------------------------------------------------------------------------
	assert list.PeekFront().value() == 3
	==> 3 == 3
================================================================================
PASS: IntLinkedListTest::TestPeekBack (at line 105)
--------------------------------------------------------------------------------
	assert list.PeekBack().value() == 0
	==> 0 == 0
================================================================================
PASS: IntLinkedListTest::TestPeekFrontAndBack (at line 111)
--------------------------------------------------------------------------------
	assert list.PeekFront().value() == list.PeekBack().value()
	==> 42 == 42
================================================================================
PASS: IntLinkedListTest::TestPeek1stDigitOfPi (at line 114)
--------------------------------------------------------------------------------
	assert pi_.Peek(0).value() == 3
	==> 3 == 3
================================================================================
PASS: IntLinkedListTest::TestPeek27thDigitOfPi (at line 115)
--------------------------------------------------------------------------------
	assert pi_.Peek(26).value() == 8
	==> 8 == 8
================================================================================
PASS: IntLinkedListTest::TestPeek100thDigitOfPi (at line 116)
--------------------------------------------------------------------------------
	assert pi_.Peek(99).value() == 7
	==> 7 == 7
================================================================================
PASS: IntLinkedListTest::TestInsertFront (at line 129)
--------------------------------------------------------------------------------
	assert fibonacci.PeekFront().value() == 0
	==> 0 == 0
================================================================================
PASS: IntLinkedListTest::TestInsertMiddle (at line 141)
--------------------------------------------------------------------------------
	assert primes.Peek(2).value() == 5
	==> 5 == 5
================================================================================
PASS: IntLinkedListTest::TestPopFront (at line 163)
--------------------------------------------------------------------------------
	assert list.PeekFront().value() == 1
	==> 1 == 1
================================================================================
PASS: IntLinkedListTest::TestPopBack (at line 170)
--------------------------------------------------------------------------------
	assert list.PeekBack().value() == 6
	==> 6 == 6
================================================================================
PASS: IntLinkedListTest::TestEraseFront (at line 177)
--------------------------------------------------------------------------------
	assert list.PeekFront().value() == -3
	==> -3 == -3
================================================================================
PASS: IntLinkedListTest::TestEraseMiddle (at line 184)
--------------------------------------------------------------------------------
	assert list.Peek(2).value() == -1
	==> -1 == -1
================================================================================
PASS: IntLinkedListTest::TestEraseBack (at line 191)
--------------------------------------------------------------------------------
	assert list.PeekBack().value() == 2
	==> 2 == 2
================================================================================
PASS: IntLinkedListTest::TestRemove (at line 198)
--------------------------------------------------------------------------------
	assert list.Peek(6).value() == 3
	==> 3 == 3
================================================================================
PASS: IntLinkedListTest::TestStreamExtraction (at line 210)
--------------------------------------------------------------------------------
	assert sout.str() == expected
	==> 3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5 0 2 8 8 4 1 9 7 1 6 9 3 9 9 3 7 5 1 0 5 8 2 0 9 7 4 9 4 4 5 9 2 3 0 7 8 1 6 4 0 6 2 8 6 2 0 8 9 9 8 6 2 8 0 3 4 8 2 5 3 4 2 1 1 7 0 6 7 == 3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5 0 2 8 8 4 1 9 7 1 6 9 3 9 9 3 7 5 1 0 5 8 2 0 9 7 4 9 4 4 5 9 2 3 0 7 8 1 6 4 0 6 2 8 6 2 0 8 9 9 8 6 2 8 0 3 4 8 2 5 3 4 2 1 1 7 0 6 7
================================================================================
PASS: StringLinkedListTest::TestPushFront1Item (at line 258)
--------------------------------------------------------------------------------
	assert list.size() == size_t{1}
	==> 1 == 1
================================================================================
PASS: StringLinkedListTest::TestPushFront25Items (at line 291)
--------------------------------------------------------------------------------
	assert list.size() == size_t{25}
	==> 25 == 25
================================================================================
PASS: StringLinkedListTest::TestPushBack1Item (at line 297)
--------------------------------------------------------------------------------
	assert list.size() == size_t{1}
	==> 1 == 1
================================================================================
PASS: StringLinkedListTest::TestPushBack24Items (at line 329)
--------------------------------------------------------------------------------
	assert list.size() == size_t{24}
	==> 24 == 24
================================================================================
PASS: StringLinkedListTest::TestPeekFront (at line 333)
--------------------------------------------------------------------------------
	assert sentence_.PeekFront().value() == std::string("but")
	==> but == but
================================================================================
PASS: StringLinkedListTest::TestPeekBack (at line 337)
--------------------------------------------------------------------------------
	assert sentence_.PeekBack().value() == std::string("it")
	==> it == it
================================================================================
PASS: StringLinkedListTest::TestPeekFrontAndBack (at line 343)
--------------------------------------------------------------------------------
	assert list.PeekFront().value() == list.PeekBack().value()
	==> mango == mango
================================================================================
PASS: StringLinkedListTest::TestPeek1stWord (at line 347)
--------------------------------------------------------------------------------
	assert sentence_.Peek(0).value() == std::string("but")
	==> but == but
================================================================================
PASS: StringLinkedListTest::TestPeek7thWord (at line 351)
--------------------------------------------------------------------------------
	assert sentence_.Peek(6).value() == std::string("even")
	==> even == even
================================================================================
PASS: StringLinkedListTest::TestPeek13thWord (at line 355)
--------------------------------------------------------------------------------
	assert sentence_.Peek(12).value() == std::string("it")
	==> it == it
================================================================================
PASS: StringLinkedListTest::TestInsertFront (at line 366)
--------------------------------------------------------------------------------
	assert rick_roll.PeekFront().value() == std::string("never")
	==> never == never
================================================================================
PASS: StringLinkedListTest::TestInsertMiddle (at line 382)
--------------------------------------------------------------------------------
	assert all_star.Peek(4).value() == std::string("the")
	==> the == the
================================================================================
PASS: StringLinkedListTest::TestPopFront (at line 398)
--------------------------------------------------------------------------------
	assert sentence_.PeekFront().value() == std::string("i")
	==> i == i
================================================================================
PASS: StringLinkedListTest::TestPopBack (at line 404)
--------------------------------------------------------------------------------
	assert sentence_.PeekBack().value() == std::string("in")
	==> in == in
================================================================================
PASS: StringLinkedListTest::TestEraseFront (at line 410)
--------------------------------------------------------------------------------
	assert sentence_.PeekFront().value() == std::string("i")
	==> i == i
================================================================================
PASS: StringLinkedListTest::TestEraseMiddle (at line 416)
--------------------------------------------------------------------------------
	assert sentence_.Peek(9).value() == std::string("believe")
	==> believe == believe
================================================================================
PASS: StringLinkedListTest::TestEraseBack (at line 422)
--------------------------------------------------------------------------------
	assert sentence_.PeekBack().value() == std::string("in")
	==> in == in
================================================================================
PASS: StringLinkedListTest::TestRemove (at line 428)
--------------------------------------------------------------------------------
	assert sentence_.Peek(9).value() == std::string("believe")
	==> believe == believe
================================================================================
PASS: StringLinkedListTest::TestStreamExtraction (at line 437)
--------------------------------------------------------------------------------
	assert sout.str() == expected
	==> but i have heard it works even if you don't believe in it == but i have heard it works even if you don't believe in it
================================================================================
PASS: FifthElementTest::TestPeekFifthIntOf10 (at line 32)
--------------------------------------------------------------------------------
	assert list.PeekFifth() == 14
	==> 14 == 14
================================================================================
PASS: FifthElementTest::TestPeekFifthIntOf5 (at line 38)
--------------------------------------------------------------------------------
	assert list.PeekFifth() == 14
	==> 14 == 14
================================================================================
PASS: FifthElementTest::TestPeekFifthIntOf4 (at line 44)
--------------------------------------------------------------------------------
	assert list.PeekFifth() → std::runtime_error
	==> std::runtime_error → std::runtime_error
================================================================================
PASS: FifthElementTest::TestPeekFifthStringOf10 (at line 59)
--------------------------------------------------------------------------------
	assert all_star.PeekFifth() == std::string("the")
	==> the == the
================================================================================
PASS: FifthElementTest::TestInsertFifthIn10 (at line 66)
--------------------------------------------------------------------------------
	assert list.Peek(4).value() == 69
	==> 69 == 69
================================================================================
PASS: FifthElementTest::TestInsertFifthIn5 (at line 73)
--------------------------------------------------------------------------------
	assert list.Peek(4).value() == 420
	==> 420 == 420
================================================================================
PASS: FifthElementTest::TestInsertFifthIn4 (at line 80)
--------------------------------------------------------------------------------
	assert list.Peek(4).value() == 42
	==> 42 == 42
================================================================================
PASS: FifthElementTest::TestInsertFifthIn3 (at line 87)
--------------------------------------------------------------------------------
	assert list.Peek(4).has_value() == false
	==> false == false
================================================================================
PASS: FifthElementTest::TestEraseFifthOf10 (at line 94)
--------------------------------------------------------------------------------
	assert list.Peek(4).value() == 15
	==> 15 == 15
================================================================================
PASS: FifthElementTest::TestEraseFifthOf6 (at line 101)
--------------------------------------------------------------------------------
	assert list.Peek(4).value() == 15
	==> 15 == 15
================================================================================
PASS: FifthElementTest::TestEraseFifthOf5 (at line 108)
--------------------------------------------------------------------------------
	assert list.Peek(4).has_value() == false
	==> false == false
================================================================================
PASS: FifthElementTest::TestEraseFifthOf4 (at line 119)
--------------------------------------------------------------------------------
	assert before_erase.str() == after_erase.str()
	==> 10 11 12 13 == 10 11 12 13
================================================================================
PASS: FifthElementTest::TestSwapFourthAndFifth (at line 128)
--------------------------------------------------------------------------------
	assert after_swap.str() == std::string("10 11 12 14 13 15 16 17 18 19")
	==> 10 11 12 14 13 15 16 17 18 19 == 10 11 12 14 13 15 16 17 18 19
--------------------------------------------------------------------------------
Ran 57 tests with 0 fails.

PASSED
