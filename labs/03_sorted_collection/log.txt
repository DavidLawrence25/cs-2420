================================================================================
PASS: SortedCollectionIntTest::TestAdd1Time (at line 32)
--------------------------------------------------------------------------------
	assert nums_.length() == size_t{1}
	==> 1 == 1
================================================================================
PASS: SortedCollectionIntTest::TestAdd4Times (at line 38)
--------------------------------------------------------------------------------
	assert nums_.length() == size_t{4}
	==> 4 == 4
================================================================================
PASS: SortedCollectionIntTest::TestItemAt0 (at line 44)
--------------------------------------------------------------------------------
	assert nums_.ItemAt(0) == 17
	==> 17 == 17
================================================================================
PASS: SortedCollectionIntTest::TestItemAtNegative1 (at line 50)
--------------------------------------------------------------------------------
	assert nums_.ItemAt(-1) == 69
	==> 69 == 69
================================================================================
PASS: SortedCollectionIntTest::TestRemoveEnd1Time (at line 57)
--------------------------------------------------------------------------------
	assert nums_.length() == size_t{3}
	==> 3 == 3
================================================================================
PASS: SortedCollectionIntTest::TestRemoveEnd3Times (at line 64)
--------------------------------------------------------------------------------
	assert nums_.length() == size_t{0}
	==> 0 == 0
================================================================================
PASS: SortedCollectionIntTest::TestRemoveEndOfEmpty (at line 70)
--------------------------------------------------------------------------------
	assert nums_.length() == size_t{0}
	==> 0 == 0
================================================================================
PASS: SortedCollectionIntTest::TestExpand1Time (at line 76)
--------------------------------------------------------------------------------
	assert nums_.capacity() == size_t{16}
	==> 16 == 16
================================================================================
PASS: SortedCollectionIntTest::TestExpand4Times (at line 82)
--------------------------------------------------------------------------------
	assert nums_.capacity() == size_t{128}
	==> 128 == 128
================================================================================
PASS: SortedCollectionIntTest::TestStreamExtraction (at line 97)
--------------------------------------------------------------------------------
	assert sout.str() == expected.str()
	==> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
================================================================================
PASS: SortedCollectionCharTest::TestAdd5Times (at line 122)
--------------------------------------------------------------------------------
	assert str_.length() == size_t{5}
	==> 5 == 5
================================================================================
PASS: SortedCollectionCharTest::TestItemAt4 (at line 131)
--------------------------------------------------------------------------------
	assert str_.ItemAt(4) == 'p'
	==> p == p
================================================================================
PASS: SortedCollectionCharTest::TestRemoveEnd1Time (at line 141)
--------------------------------------------------------------------------------
	assert str_.length() == size_t{4}
	==> 4 == 4
================================================================================
PASS: SortedCollectionCharTest::TestExpand2Times (at line 150)
--------------------------------------------------------------------------------
	assert str_.capacity() == size_t{32}
	==> 32 == 32
================================================================================
PASS: SortedCollectionCharTest::TestStreamExtraction (at line 169)
--------------------------------------------------------------------------------
	assert sout.str() == expected.str()
	==> [ ,  ,  , a, a, d, e, e, e, g, l, o, o, p, p, p, r, s, s, t, t, t, t, y] == [ ,  ,  , a, a, d, e, e, e, g, l, o, o, p, p, p, r, s, s, t, t, t, t, y]
================================================================================
PASS: SortedCollectionCharTest::TestStreamExtractionOnEmpty (at line 176)
--------------------------------------------------------------------------------
	assert sout.str() == std::string("[]")
	==> [] == []
--------------------------------------------------------------------------------
Ran 16 tests with 0 fails.

PASSED
