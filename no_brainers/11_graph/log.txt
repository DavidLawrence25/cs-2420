====================================================================================================
PASS: GraphTest::TestOrder (in ./no_brainers/11_graph/test_cases.h at 47:22)
----------------------------------------------------------------------------------------------------
	assert graph_.order() == size_t{10}
	==> 10 == 10
====================================================================================================
PASS: GraphTest::TestIndexOf7 (in ./no_brainers/11_graph/test_cases.h at 50:5)
----------------------------------------------------------------------------------------------------
	assert graph_.IndexOf(7).value_or(kU64Max) == uindex_t{3}
	==> 3 == 3
====================================================================================================
PASS: GraphTest::Test1AdjacentTo4 (in ./no_brainers/11_graph/test_cases.h at 53:29)
----------------------------------------------------------------------------------------------------
	assert graph_.Adjacent(1, 4) == true
	==> true == true
====================================================================================================
PASS: GraphTest::Test1AdjacentTo0 (in ./no_brainers/11_graph/test_cases.h at 54:29)
----------------------------------------------------------------------------------------------------
	assert graph_.Adjacent(1, 0) == true
	==> true == true
====================================================================================================
PASS: GraphTest::Test0NotAdjacentTo4 (in ./no_brainers/11_graph/test_cases.h at 55:32)
----------------------------------------------------------------------------------------------------
	assert graph_.Adjacent(0, 4) == false
	==> false == false
====================================================================================================
PASS: GraphTest::TestStreamExtraction (in ./no_brainers/11_graph/test_cases.h at 71:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == expected
	==> 9: <8, 1> <5, 1> 
2: <7, 1> <0, 1> 
1: <4, 1> <0, 1> 
7: <2, 1> <6, 1> 
5: <9, 1> <8, 1> <6, 1> <4, 1> 
4: <5, 1> <1, 1> 
8: <9, 1> <5, 1> <6, 1> 
3: <6, 1> <0, 1> 
6: <8, 1> <7, 1> <3, 1> <5, 1> 
0: <3, 1> <2, 1> <1, 1> 
 == 9: <8, 1> <5, 1> 
2: <7, 1> <0, 1> 
1: <4, 1> <0, 1> 
7: <2, 1> <6, 1> 
5: <9, 1> <8, 1> <6, 1> <4, 1> 
4: <5, 1> <1, 1> 
8: <9, 1> <5, 1> <6, 1> 
3: <6, 1> <0, 1> 
6: <8, 1> <7, 1> <3, 1> <5, 1> 
0: <3, 1> <2, 1> <1, 1> 

----------------------------------------------------------------------------------------------------
Ran 6 tests with 0 fails.

PASSED
