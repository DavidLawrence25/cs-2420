{
  "meta": {
    "tests_ran": 6,
    "steps_taken": 18,
    "fails": 0
  },
  "tests_failed": [],
  "tests_passed": [
    {
      "name": "TestAddition",
      "step": 2,
      "step_type": "assert_equal",
      "repr0": "one_one + three_four",
      "repr1": "(4, 5)",
      "context": [
        {
          "name": "__TestCaseConstructor__",
          "step": 0,
          "step_type": "global_init",
          "global_name": "one_one",
          "value": "Point<int>(1, 1)"
        },
        {
          "name": "__TestCaseConstructor__",
          "step": 1,
          "step_type": "global_init",
          "global_name": "three_four",
          "value": "Point<int>(3, 4)"
        }
      ]
    },
    {
      "name": "TestInPlaceAdd",
      "step": 4,
      "step_type": "assert_equal",
      "repr0": "one_one",
      "repr1": "(4, 5)",
      "context": [
        {
          "name": "__TestCaseConstructor__",
          "step": 0,
          "step_type": "global_init",
          "global_name": "one_one",
          "value": "Point<int>(1, 1)"
        },
        {
          "name": "TestInPlaceAdd",
          "step": 3,
          "step_type": "function_call",
          "repr": "one_one.operator+=(three_four)"
        }
      ]
    },
    {
      "name": "TestSubtraction",
      "step": 6,
      "step_type": "assert_equal",
      "repr0": "one_one - three_four",
      "repr1": "(-2, -3)",
      "context": [
        {
          "name": "__TestCaseConstructor__",
          "step": 1,
          "step_type": "global_init",
          "global_name": "three_four",
          "value": "Point<int>(3, 4)"
        },
        {
          "name": "TestInPlaceAdd",
          "step": 3,
          "step_type": "function_call",
          "repr": "one_one.operator+=(three_four)"
        },
        {
          "name": "TestInPlaceAdd",
          "step": 5,
          "step_type": "global_set",
          "global_name": "one_one",
          "value": "Point<int>(1, 1)"
        }
      ]
    },
    {
      "name": "TestInPlaceSub",
      "step": 8,
      "step_type": "assert_equal",
      "repr0": "one_one",
      "repr1": "(-2, -3)",
      "context": [
        {
          "name": "TestInPlaceAdd",
          "step": 5,
          "step_type": "global_set",
          "global_name": "one_one",
          "value": "Point<int>(1, 1)"
        },
        {
          "name": "TestInPlaceSub",
          "step": 7,
          "step_type": "function_call",
          "repr": "one_one.operator-=(three_four)"
        }
      ]
    },
    {
      "name": "TestInsertion",
      "step": 14,
      "step_type": "assert_equal",
      "repr0": "p",
      "repr1": "(3, 4)",
      "context": [
        {
          "name": "TestInsertion",
          "step": 11,
          "step_type": "local_init",
          "local_name": "p",
          "value": "Point<int>()"
        },
        {
          "name": "TestInsertion",
          "step": 13,
          "step_type": "function_call",
          "repr": "operator>>(sin, p)"
        }
      ]
    },
    {
      "name": "TestExtraction",
      "step": 17,
      "step_type": "assert_equal",
      "repr0": "sout.str()",
      "repr1": "(1, 1)",
      "context": [
        {
          "name": "TestExtraction",
          "step": 15,
          "step_type": "local_init",
          "local_name": "sout",
          "value": "std::stringstream()"
        },
        {
          "name": "TestExtraction",
          "step": 16,
          "step_type": "function_call",
          "repr": "operator<<(sout, one_one)"
        }
      ]
    }
  ],
  "timeline": [
    {
      "name": "__TestCaseConstructor__",
      "step_type": "global_init",
      "global_name": "one_one",
      "value": "Point<int>(1, 1)"
    },
    {
      "name": "__TestCaseConstructor__",
      "step_type": "global_init",
      "global_name": "three_four",
      "value": "Point<int>(3, 4)"
    },
    {
      "name": "TestAddition",
      "step_type": "assert_equal",
      "repr0": "one_one + three_four",
      "repr1": "(4, 5)"
    },
    {
      "name": "TestInPlaceAdd",
      "step_type": "function_call",
      "repr": "one_one.operator+=(three_four)"
    },
    {
      "name": "TestInPlaceAdd",
      "step_type": "assert_equal",
      "repr0": "one_one",
      "repr1": "(4, 5)"
    },
    {
      "name": "TestInPlaceAdd",
      "step_type": "global_set",
      "global_name": "one_one",
      "value": "Point<int>(1, 1)"
    },
    {
      "name": "TestSubtraction",
      "step_type": "assert_equal",
      "repr0": "one_one - three_four",
      "repr1": "(-2, -3)"
    },
    {
      "name": "TestInPlaceSub",
      "step_type": "function_call",
      "repr": "one_one.operator-=(three_four)"
    },
    {
      "name": "TestInPlaceSub",
      "step_type": "assert_equal",
      "repr0": "one_one",
      "repr1": "(-2, -3)"
    },
    {
      "name": "TestInPlaceSub",
      "step_type": "global_set",
      "global_name": "one_one",
      "value": "Point<int>(1, 1)"
    },
    {
      "name": "TestInsertion",
      "step_type": "local_init",
      "local_name": "sin",
      "value": "std::stringstream()"
    },
    {
      "name": "TestInsertion",
      "step_type": "local_init",
      "local_name": "p",
      "value": "Point<int>()"
    },
    {
      "name": "TestInsertion",
      "step_type": "function_call",
      "repr": "operator<<(sin, \"3 4\")"
    },
    {
      "name": "TestInsertion",
      "step_type": "function_call",
      "repr": "operator>>(sin, p)"
    },
    {
      "name": "TestInsertion",
      "step_type": "assert_equal",
      "repr0": "p",
      "repr1": "(3, 4)"
    },
    {
      "name": "TestExtraction",
      "step_type": "local_init",
      "local_name": "sout",
      "value": "std::stringstream()"
    },
    {
      "name": "TestExtraction",
      "step_type": "function_call",
      "repr": "operator<<(sout, one_one)"
    },
    {
      "name": "TestExtraction",
      "step_type": "assert_equal",
      "repr0": "sout.str()",
      "repr1": "(1, 1)"
    }
  ]
}