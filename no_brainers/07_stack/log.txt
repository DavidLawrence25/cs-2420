================================================================================
PASS: StackSizeTest::TestEmpty (at line 25)
--------------------------------------------------------------------------------
	assert stack_.empty() == true
	==> true == true
================================================================================
PASS: StackSizeTest::TestNotEmpty (at line 29)
--------------------------------------------------------------------------------
	assert stack_.empty() == false
	==> false == false
================================================================================
PASS: StackSizeTest::TestWasntEmptyBefore (at line 36)
--------------------------------------------------------------------------------
	assert stack_.empty() == true
	==> true == true
================================================================================
PASS: StackSizeTest::TestSizeOf0 (at line 40)
--------------------------------------------------------------------------------
	assert stack_.size() == size_t{0}
	==> 0 == 0
================================================================================
PASS: StackSizeTest::TestSizeOf2 (at line 45)
--------------------------------------------------------------------------------
	assert stack_.size() == size_t{2}
	==> 2 == 2
================================================================================
PASS: StackSizeTest::TestSizeOf5 (at line 55)
--------------------------------------------------------------------------------
	assert stack_.size() == size_t{5}
	==> 5 == 5
================================================================================
PASS: BasicStackTest::TestPush1 (at line 75)
--------------------------------------------------------------------------------
	assert stack_.top().value_or(-1) == 1
	==> 1 == 1
================================================================================
PASS: BasicStackTest::TestPush5 (at line 81)
--------------------------------------------------------------------------------
	assert stack_.top().value_or(-1) == 5
	==> 5 == 5
================================================================================
PASS: BasicStackTest::TestPush16AndPop12 (at line 88)
--------------------------------------------------------------------------------
	assert stack_.top().value_or(-1) == 4
	==> 4 == 4
================================================================================
PASS: BasicStackTest::TestStreamExtraction (at line 96)
--------------------------------------------------------------------------------
	assert sout.str() == std::string("16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1")
	==> 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 == 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1
================================================================================
PASS: StringStackTest::TestSizeOf3 (at line 123)
--------------------------------------------------------------------------------
	assert stack_.size() == size_t{3}
	==> 3 == 3
================================================================================
PASS: StringStackTest::TestPopPopReplace (at line 130)
--------------------------------------------------------------------------------
	assert stack_.top().value_or("you messed up") == marker
	==> marker == marker
================================================================================
PASS: StringStackTest::TestPopPopReplacePop (at line 140)
--------------------------------------------------------------------------------
	assert stack_.top().value_or("you messed up") == std::string("pencil")
	==> pencil == pencil
================================================================================
PASS: StringStackTest::TestClear (at line 146)
--------------------------------------------------------------------------------
	assert stack_.empty() == true
	==> true == true
================================================================================
PASS: BadStackUseTest::TestReadEmpty (at line 159)
--------------------------------------------------------------------------------
	assert stack_.top().has_value() == false
	==> false == false
--------------------------------------------------------------------------------
Ran 15 tests with 0 fails.

PASSED
