====================================================================================================
PASS: TrivialMazeTest::TestStreamExtraction (in ../../no_brainers/06_recursion_maze/test_cases.h at 24:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == kMazeInitializer_
	==>   ==  
====================================================================================================
PASS: TrivialMazeTest::TestSolve (in ../../no_brainers/06_recursion_maze/test_cases.h at 28:5)
----------------------------------------------------------------------------------------------------
	assert maze_.Solve() == true
	==> true == true
====================================================================================================
PASS: TrivialMazeTest::TestPrintSuccess (in ../../no_brainers/06_recursion_maze/test_cases.h at 35:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == std::string("Success")
	==> Success == Success
====================================================================================================
PASS: EasyMazeTest::TestShouldExploreOutOfBounds (in ../../no_brainers/06_recursion_maze/test_cases.h at 65:5)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(-1, 12) == false
	==> false == false
====================================================================================================
PASS: EasyMazeTest::TestShouldExploreEmpty (in ../../no_brainers/06_recursion_maze/test_cases.h at 68:35)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(3, 5) == true
	==> true == true
====================================================================================================
PASS: EasyMazeTest::TestShouldExplorePath (in ../../no_brainers/06_recursion_maze/test_cases.h at 72:5)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(1, 3) == false
	==> false == false
====================================================================================================
PASS: EasyMazeTest::TestShouldExploreWall (in ../../no_brainers/06_recursion_maze/test_cases.h at 76:34)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(0, 0) == false
	==> false == false
====================================================================================================
PASS: EasyMazeTest::TestStreamExtraction (in ../../no_brainers/06_recursion_maze/test_cases.h at 81:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == kMazeInitializer_
	==> ##### #####
#     #   #
# ### # # #
# #     # #
### ### # #
#     # # #
# ##### # #
#   #   # #
### # ### #
#   # #   #
##### ##### == ##### #####
#     #   #
# ### # # #
# #     # #
### ### # #
#     # # #
# ##### # #
#   #   # #
### # ### #
#   # #   #
##### #####
====================================================================================================
PASS: EasyMazeTest::TestSolve (in ../../no_brainers/06_recursion_maze/test_cases.h at 85:5)
----------------------------------------------------------------------------------------------------
	assert maze_.Solve() == true
	==> true == true
====================================================================================================
PASS: EasyMazeTest::TestPrintSuccess (in ../../no_brainers/06_recursion_maze/test_cases.h at 92:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == std::string("Success")
	==> Success == Success
====================================================================================================
PASS: GivenMazeTest::TestShouldExploreOutOfBounds (in ../../no_brainers/06_recursion_maze/test_cases.h at 133:5)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(3, 12) == false
	==> false == false
====================================================================================================
PASS: GivenMazeTest::TestShouldExploreEmpty (in ../../no_brainers/06_recursion_maze/test_cases.h at 136:35)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(2, 1) == true
	==> true == true
====================================================================================================
PASS: GivenMazeTest::TestShouldExplorePath (in ../../no_brainers/06_recursion_maze/test_cases.h at 140:5)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(1, 10) == false
	==> false == false
====================================================================================================
PASS: GivenMazeTest::TestShouldExploreWall (in ../../no_brainers/06_recursion_maze/test_cases.h at 144:34)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(0, 0) == false
	==> false == false
====================================================================================================
PASS: GivenMazeTest::TestStreamExtraction (in ../../no_brainers/06_recursion_maze/test_cases.h at 149:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == kMazeInitializer_
	==> ############
#   #      #
  # # #### #
### #    # #
#    ### #  
#### # # # #
#  # # # # #
## # # # # #
#        # #
###### ### #
#      #   #
############ == ############
#   #      #
  # # #### #
### #    # #
#    ### #  
#### # # # #
#  # # # # #
## # # # # #
#        # #
###### ### #
#      #   #
############
====================================================================================================
PASS: GivenMazeTest::TestSolve (in ../../no_brainers/06_recursion_maze/test_cases.h at 153:5)
----------------------------------------------------------------------------------------------------
	assert maze_.Solve() == true
	==> true == true
====================================================================================================
PASS: GivenMazeTest::TestPrintSuccess (in ../../no_brainers/06_recursion_maze/test_cases.h at 160:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == std::string("Success")
	==> Success == Success
====================================================================================================
PASS: HardMazeTest::TestShouldExploreOutOfBounds (in ../../no_brainers/06_recursion_maze/test_cases.h at 202:5)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(31, 0) == false
	==> false == false
====================================================================================================
PASS: HardMazeTest::TestShouldExploreEmpty (in ../../no_brainers/06_recursion_maze/test_cases.h at 205:35)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(0, 1) == true
	==> true == true
====================================================================================================
PASS: HardMazeTest::TestShouldExplorePath (in ../../no_brainers/06_recursion_maze/test_cases.h at 209:5)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(1, 29) == false
	==> false == false
====================================================================================================
PASS: HardMazeTest::TestShouldExploreWall (in ../../no_brainers/06_recursion_maze/test_cases.h at 213:34)
----------------------------------------------------------------------------------------------------
	assert maze_.ShouldExplore(30, 30) == false
	==> false == false
====================================================================================================
PASS: HardMazeTest::TestStreamExtraction (in ../../no_brainers/06_recursion_maze/test_cases.h at 218:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == kMazeInitializer_
	==> ###############################
    #         #       #       #
### # ####### # ####### ### ###
#   # #     # #     #   #   # #
# ######### # # # # ##### ### #
#     #   #   # # #     # # # #
### # # ##### # # ####### # # #
#   #   #     # # #       # # #
# # ### # # ### # # # ##### # #
# # # # # #   # #   #     # # #
# ### ####### # ### ####### # #
#   #         # # #       #   #
# ####### ##### # ### ####### #
#   #     #         #   #   # #
# # # ##### ### ########### # #
# # # #       #     #     # # #
# # # ####### ####### ##### # #
# # #   # # # #       #   # # #
# # # ### # # # ### ##### # # #
# # #       #   # #           #
### ##### ### # # # # ##### # #
# #   # # #   # # # # #     # #
# # ### # # ### # ##### ### # #
#   # #   # # #   #     #   # #
### # ### # # # ##### ##### # #
#         #   #   # # #   # # #
# # # ##### # ##### # ### # # #
# # # # #   #     # #   #   # #
### # # ### # ### # # ####### #
#   #       #   # #         #  
############################### == ###############################
    #         #       #       #
### # ####### # ####### ### ###
#   # #     # #     #   #   # #
# ######### # # # # ##### ### #
#     #   #   # # #     # # # #
### # # ##### # # ####### # # #
#   #   #     # # #       # # #
# # ### # # ### # # # ##### # #
# # # # # #   # #   #     # # #
# ### ####### # ### ####### # #
#   #         # # #       #   #
# ####### ##### # ### ####### #
#   #     #         #   #   # #
# # # ##### ### ########### # #
# # # #       #     #     # # #
# # # ####### ####### ##### # #
# # #   # # # #       #   # # #
# # # ### # # # ### ##### # # #
# # #       #   # #           #
### ##### ### # # # # ##### # #
# #   # # #   # # # # #     # #
# # ### # # ### # ##### ### # #
#   # #   # # #   #     #   # #
### # ### # # # ##### ##### # #
#         #   #   # # #   # # #
# # # ##### # ##### # ### # # #
# # # # #   #     # #   #   # #
### # # ### # ### # # ####### #
#   #       #   # #         #  
###############################
====================================================================================================
PASS: HardMazeTest::TestSolve (in ../../no_brainers/06_recursion_maze/test_cases.h at 222:5)
----------------------------------------------------------------------------------------------------
	assert maze_.Solve() == true
	==> true == true
====================================================================================================
PASS: HardMazeTest::TestPrintSuccess (in ../../no_brainers/06_recursion_maze/test_cases.h at 229:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == std::string("Success")
	==> Success == Success
====================================================================================================
PASS: DonutMazeTest::TestStreamExtraction (in ../../no_brainers/06_recursion_maze/test_cases.h at 288:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == kMazeInitializer_
	==> ###
# #
### == ###
# #
###
====================================================================================================
PASS: DonutMazeTest::TestSolve (in ../../no_brainers/06_recursion_maze/test_cases.h at 292:5)
----------------------------------------------------------------------------------------------------
	assert maze_.Solve() == false
	==> false == false
====================================================================================================
PASS: DonutMazeTest::TestPrintSuccess (in ../../no_brainers/06_recursion_maze/test_cases.h at 299:5)
----------------------------------------------------------------------------------------------------
	assert sout.str() == std::string("Could not be solved")
	==> Could not be solved == Could not be solved
----------------------------------------------------------------------------------------------------
Ran 27 tests with 0 fails.

PASSED
