{
  "meta": {
    "cases": 3,
    "tests": 46,
    "fails": 0
  },
  "test_cases": {
    "EmptyLinkedListTest": [
      {
        "name": "TestIsEmpty",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 24,
        "column": 24,
        "assertion_type": "true",
        "passed": true,
        "expression": "list_.empty()",
        "value": "true"
      },
      {
        "name": "TestPeekFront",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 25,
        "column": 26,
        "assertion_type": "false",
        "passed": true,
        "expression": "list_.PeekFront().has_value()",
        "value": "false"
      },
      {
        "name": "TestPeekBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 26,
        "column": 25,
        "assertion_type": "false",
        "passed": true,
        "expression": "list_.PeekBack().has_value()",
        "value": "false"
      },
      {
        "name": "TestPeek3",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 27,
        "column": 22,
        "assertion_type": "false",
        "passed": true,
        "expression": "list_.Peek(3).has_value()",
        "value": "false"
      },
      {
        "name": "TestPeekNegative2",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 28,
        "column": 30,
        "assertion_type": "false",
        "passed": true,
        "expression": "list_.Peek(-2).has_value()",
        "value": "false"
      },
      {
        "name": "TestStreamExtraction",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 33,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sout.str()",
          "value": ""
        },
        "arg1": {
          "repr": "std::string()",
          "value": ""
        }
      }
    ],
    "IntLinkedListTest": [
      {
        "name": "TestPushFront1Item",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 75,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.size()",
          "value": "1"
        },
        "arg1": {
          "repr": "size_t{1}",
          "value": "1"
        }
      },
      {
        "name": "TestPushFront20Items",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 81,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.size()",
          "value": "20"
        },
        "arg1": {
          "repr": "size_t{20}",
          "value": "20"
        }
      },
      {
        "name": "TestPushBack1Item",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 87,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.size()",
          "value": "1"
        },
        "arg1": {
          "repr": "size_t{1}",
          "value": "1"
        }
      },
      {
        "name": "TestPushBack20Items",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 93,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.size()",
          "value": "20"
        },
        "arg1": {
          "repr": "size_t{20}",
          "value": "20"
        }
      },
      {
        "name": "TestPeekFront",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 99,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.PeekFront().value()",
          "value": "3"
        },
        "arg1": {
          "repr": "3",
          "value": "3"
        }
      },
      {
        "name": "TestPeekBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 105,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.PeekBack().value()",
          "value": "0"
        },
        "arg1": {
          "repr": "0",
          "value": "0"
        }
      },
      {
        "name": "TestPeekFrontAndBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 111,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.PeekFront().value()",
          "value": "42"
        },
        "arg1": {
          "repr": "list.PeekBack().value()",
          "value": "42"
        }
      },
      {
        "name": "TestPeek1stDigitOfPi",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 114,
        "column": 33,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "pi_.Peek(0).value()",
          "value": "3"
        },
        "arg1": {
          "repr": "3",
          "value": "3"
        }
      },
      {
        "name": "TestPeek27thDigitOfPi",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 115,
        "column": 34,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "pi_.Peek(26).value()",
          "value": "8"
        },
        "arg1": {
          "repr": "8",
          "value": "8"
        }
      },
      {
        "name": "TestPeek100thDigitOfPi",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 116,
        "column": 35,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "pi_.Peek(99).value()",
          "value": "7"
        },
        "arg1": {
          "repr": "7",
          "value": "7"
        }
      },
      {
        "name": "TestInsertFront",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 129,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "fibonacci.PeekFront().value()",
          "value": "0"
        },
        "arg1": {
          "repr": "0",
          "value": "0"
        }
      },
      {
        "name": "TestInsertMiddle",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 141,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "primes.Peek(2).value()",
          "value": "5"
        },
        "arg1": {
          "repr": "5",
          "value": "5"
        }
      },
      {
        "name": "TestInsertBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 157,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "e.PeekBack().value()",
          "value": "8"
        },
        "arg1": {
          "repr": "8",
          "value": "8"
        }
      },
      {
        "name": "TestPopFront",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 164,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.PeekFront().value()",
          "value": "1"
        },
        "arg1": {
          "repr": "1",
          "value": "1"
        }
      },
      {
        "name": "TestPopBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 171,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.PeekBack().value()",
          "value": "6"
        },
        "arg1": {
          "repr": "6",
          "value": "6"
        }
      },
      {
        "name": "TestEraseFront",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 178,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.PeekFront().value()",
          "value": "-3"
        },
        "arg1": {
          "repr": "-3",
          "value": "-3"
        }
      },
      {
        "name": "TestEraseMiddle",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 185,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.Peek(2).value()",
          "value": "-1"
        },
        "arg1": {
          "repr": "-1",
          "value": "-1"
        }
      },
      {
        "name": "TestEraseBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 192,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.PeekBack().value()",
          "value": "2"
        },
        "arg1": {
          "repr": "2",
          "value": "2"
        }
      },
      {
        "name": "TestRemove",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 199,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.Peek(6).value()",
          "value": "3"
        },
        "arg1": {
          "repr": "3",
          "value": "3"
        }
      },
      {
        "name": "TestStreamExtraction",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 211,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sout.str()",
          "value": "3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5 0 2 8 8 4 1 9 7 1 6 9 3 9 9 3 7 5 1 0 5 8 2 0 9 7 4 9 4 4 5 9 2 3 0 7 8 1 6 4 0 6 2 8 6 2 0 8 9 9 8 6 2 8 0 3 4 8 2 5 3 4 2 1 1 7 0 6 7"
        },
        "arg1": {
          "repr": "expected",
          "value": "3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5 0 2 8 8 4 1 9 7 1 6 9 3 9 9 3 7 5 1 0 5 8 2 0 9 7 4 9 4 4 5 9 2 3 0 7 8 1 6 4 0 6 2 8 6 2 0 8 9 9 8 6 2 8 0 3 4 8 2 5 3 4 2 1 1 7 0 6 7"
        }
      }
    ],
    "StringLinkedListTest": [
      {
        "name": "TestPushFront1Item",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 259,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.size()",
          "value": "1"
        },
        "arg1": {
          "repr": "size_t{1}",
          "value": "1"
        }
      },
      {
        "name": "TestPushFront25Items",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 292,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.size()",
          "value": "25"
        },
        "arg1": {
          "repr": "size_t{25}",
          "value": "25"
        }
      },
      {
        "name": "TestPushBack1Item",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 298,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.size()",
          "value": "1"
        },
        "arg1": {
          "repr": "size_t{1}",
          "value": "1"
        }
      },
      {
        "name": "TestPushBack24Items",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 330,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.size()",
          "value": "24"
        },
        "arg1": {
          "repr": "size_t{24}",
          "value": "24"
        }
      },
      {
        "name": "TestPeekFront",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 334,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.PeekFront().value()",
          "value": "but"
        },
        "arg1": {
          "repr": "std::string(\"but\")",
          "value": "but"
        }
      },
      {
        "name": "TestPeekBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 338,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.PeekBack().value()",
          "value": "it"
        },
        "arg1": {
          "repr": "std::string(\"it\")",
          "value": "it"
        }
      },
      {
        "name": "TestPeekFrontAndBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 344,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "list.PeekFront().value()",
          "value": "mango"
        },
        "arg1": {
          "repr": "list.PeekBack().value()",
          "value": "mango"
        }
      },
      {
        "name": "TestPeek1stWord",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 348,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.Peek(0).value()",
          "value": "but"
        },
        "arg1": {
          "repr": "std::string(\"but\")",
          "value": "but"
        }
      },
      {
        "name": "TestPeek7thWord",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 352,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.Peek(6).value()",
          "value": "even"
        },
        "arg1": {
          "repr": "std::string(\"even\")",
          "value": "even"
        }
      },
      {
        "name": "TestPeek13thWord",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 356,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.Peek(12).value()",
          "value": "it"
        },
        "arg1": {
          "repr": "std::string(\"it\")",
          "value": "it"
        }
      },
      {
        "name": "TestInsertFront",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 367,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "rick_roll.PeekFront().value()",
          "value": "never"
        },
        "arg1": {
          "repr": "std::string(\"never\")",
          "value": "never"
        }
      },
      {
        "name": "TestInsertMiddle",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 383,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "all_star.Peek(4).value()",
          "value": "the"
        },
        "arg1": {
          "repr": "std::string(\"the\")",
          "value": "the"
        }
      },
      {
        "name": "TestInsertBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 395,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "egg_quote.PeekBack().value()",
          "value": "him]"
        },
        "arg1": {
          "repr": "std::string(\"him]\")",
          "value": "him]"
        }
      },
      {
        "name": "TestPopFront",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 400,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.PeekFront().value()",
          "value": "i"
        },
        "arg1": {
          "repr": "std::string(\"i\")",
          "value": "i"
        }
      },
      {
        "name": "TestPopBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 406,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.PeekBack().value()",
          "value": "in"
        },
        "arg1": {
          "repr": "std::string(\"in\")",
          "value": "in"
        }
      },
      {
        "name": "TestEraseFront",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 412,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.PeekFront().value()",
          "value": "i"
        },
        "arg1": {
          "repr": "std::string(\"i\")",
          "value": "i"
        }
      },
      {
        "name": "TestEraseMiddle",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 418,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.Peek(9).value()",
          "value": "believe"
        },
        "arg1": {
          "repr": "std::string(\"believe\")",
          "value": "believe"
        }
      },
      {
        "name": "TestEraseBack",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 424,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.PeekBack().value()",
          "value": "in"
        },
        "arg1": {
          "repr": "std::string(\"in\")",
          "value": "in"
        }
      },
      {
        "name": "TestRemove",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 430,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sentence_.Peek(9).value()",
          "value": "believe"
        },
        "arg1": {
          "repr": "std::string(\"believe\")",
          "value": "believe"
        }
      },
      {
        "name": "TestStreamExtraction",
        "file": "./no_brainers/05_linked_list/test_cases.h",
        "line": 439,
        "column": 5,
        "assertion_type": "equal",
        "passed": true,
        "arg0": {
          "repr": "sout.str()",
          "value": "but i have heard it works even if you don't believe in it"
        },
        "arg1": {
          "repr": "expected",
          "value": "but i have heard it works even if you don't believe in it"
        }
      }
    ]
  }
}